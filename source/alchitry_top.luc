module alchitry_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    output led[8],          // 8 user controllable LEDs
    input usb_rx,            // USB->Serial input
    output usb_tx,           // USB->Serial output
    output io_led[3][8],     // LEDs on IO Shield
    output io_segment[8],        // 7-segment LEDs on IO Shield
    output io_select[4],        // Digit select on IO Shield
    input io_button[5],      // 5 buttons on IO Shield
    input io_dip[3][8]       // DIP switches on IO Shield
) {
    
    sig rst                 // reset signal
     
    .clk(clk) {
        // The reset conditioner is used to synchronize the reset signal to the FPGA
        // clock. This ensures the entire FPGA comes out of reset at the same time.
        reset_conditioner reset_cond
        
        //edge detectors
        
        //detects both falling and rising edge
        edge_detector dip_edge_detector[3][8] (#RISE(3x{{8x{{1}}}}), #FALL(3x{{8x{{1}}}}))
        
        .rst(rst){
            game_regfiles regfiles
        }
    }

    
   
    always {
        reset_cond.in = ~rst_n  // input raw inverted reset signal
        rst = reset_cond.out    // conditioned reset
 
        usb_tx = usb_rx          // loop serial port
        
        //default outputs
        led = 8b0
        io_led = 3x{{8b0}}
        io_segment = 7b1111111
        io_select = 4hF
        
        dip_edge_detector.in = io_dip
        
        regfiles.wa = d4 
        regfiles.we = b1 
        regfiles.data = 32b11
        regfiles.ra1 = d4 
        regfiles.ra2 = d3 
        
        io_led[0] = regfiles.game_leds [7:0]
        io_led[1] = regfiles.game_leds [15:8]
        io_led[2] = regfiles.game_leds [23:16]
        
        io_led[0] = regfiles.rd2 [7:0]
        io_led[1] = regfiles.rd2 [15:8]
        io_led[2] = regfiles.rd2 [23:16]
        
        led[1:0] = regfiles.indicator_led
        
        led[3:2] = regfiles.bomb_color_led
        
        
        
        
 
    }
}